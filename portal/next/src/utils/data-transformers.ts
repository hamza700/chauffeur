import type { IUserItem, IUserDocumentFields } from 'src/types/user';
import type { IVehicleItem, IVehicleDocumentFields } from 'src/types/vehicle';
import type { VehicleData, ProviderData, ChauffeurData } from 'src/auth/context/supabase';
import type {
  PaymentDetails,
  IDocumentFields,
  IProviderAccount,
  PartnerAgreement,
} from 'src/types/provider';

export const transformChauffeurData = (user: any): IUserItem => ({
  id: user.id,
  providerId: user.provider_id,
  firstName: user.first_name,
  lastName: user.last_name,
  email: user.email,
  phoneNumber: user.phone_number,
  status: user.status,
  country: user.country,
  isVerified: user.is_verified,
  driversLicense: user.drivers_license,
  privateHireLicense: user.private_hire_license,
  licensePlate: user.license_plate,
  documents: {
    profilePicUrl: '',
    profilePicStatus: user.profile_pic_status,
    driversLicenseUrls: [],
    driversLicenseExpiryDate: user.drivers_license_expiry_date,
    driversLicenseStatus: user.drivers_license_status,
    privateHireLicenseUrls: [],
    privateHireLicenseExpiryDate: user.private_hire_license_expiry_date,
    privateHireLicenseStatus: user.private_hire_license_status,
  } as IUserDocumentFields,
});

export const transformToChauffeurData = (user: any): ChauffeurData => ({
  id: user.id,
  first_name: user.firstName,
  last_name: user.lastName,
  email: user.email,
  phone_number: user.phoneNumber,
  status: 'pending',
  country: user.country,
  drivers_license: user.driversLicense,
  private_hire_license: user.privateHireLicense,
  license_plate: user.licensePlate,
  profile_pic_status: null,
  drivers_license_status: null,
  private_hire_license_status: null,
  drivers_license_expiry_date: user.driversLicenseExpiryDate,
  private_hire_license_expiry_date: user.privateHireLicenseExpiryDate,
  provider_id: user.providerId,
  onboarded: false,
});

export const transformVehicleData = (vehicle: any): IVehicleItem => ({
  id: vehicle.id,
  providerId: vehicle.provider_id,
  licensePlate: vehicle.license_plate,
  model: vehicle.model,
  colour: vehicle.colour,
  productionYear: vehicle.production_year,
  serviceClass: vehicle.service_class,
  status: vehicle.status,
  documents: {
    privateHireLicenseUrls: [],
    privateHireLicenseExpiryDate: vehicle.private_hire_license_expiry_date,
    privateHireLicenseStatus: vehicle.private_hire_license_status,
    motTestCertificateUrls: [],
    motTestCertificateExpiryDate: vehicle.mot_test_certificate_expiry_date,
    motTestCertificateStatus: vehicle.mot_test_certificate_status,
    vehiclePicUrl: '',
    vehiclePicStatus: vehicle.vehicle_pic_status,
    vehicleInsuranceUrls: [],
    vehicleInsuranceExpiryDate: vehicle.vehicle_insurance_expiry_date,
    vehicleInsuranceStatus: vehicle.vehicle_insurance_status,
    vehicleRegistrationUrls: [],
    vehicleRegistrationStatus: vehicle.vehicle_registration_status,
    leasingContractUrls: [],
    leasingContractStatus: vehicle.leasing_contract_status,
  } as IVehicleDocumentFields,
});

export const transformToVehicleData = (vehicle: any): VehicleData => ({
  id: vehicle.id,
  provider_id: vehicle.providerId,
  license_plate: vehicle.licensePlate,
  model: vehicle.model,
  colour: vehicle.colour,
  production_year: vehicle.productionYear,
  service_class: vehicle.serviceClass,
  status: 'pending',
  private_hire_license_expiry_date: vehicle.privateHireLicenseExpiryDate,
  private_hire_license_status: null,
  mot_test_certificate_expiry_date: vehicle.motTestCertificateExpiryDate,
  mot_test_certificate_status: null,
  vehicle_pic_status: null,
  vehicle_insurance_expiry_date: vehicle.vehicleInsuranceExpiryDate,
  vehicle_insurance_status: null,
  vehicle_registration_status: null,
  leasing_contract_status: null,
});

export const transformProviderData = (provider: any): IProviderAccount => ({
  id: provider.id,
  city: provider.city,
  state: provider.state,
  address: provider.address,
  postCode: provider.post_code,
  isVerified: provider.is_verified,
  status: provider.status,
  formCompleted: provider.form_completed,
  phoneNumber: provider.phone_number,
  country: provider.country,
  companyName: provider.company_name,
  companyRegistrationNumber: provider.company_registration_number,
  taxIdentificationNumber: provider.tax_identification_number,
  vatNumber: provider.vat_number,
  documents: {
    companyPrivateHireOperatorLicenseUrls: [],
    companyPrivateHireOperatorLicenseExpiryDate:
      provider.company_private_hire_operator_license_expiry_date,
    companyPrivateHireOperatorLicenseStatus: provider.company_private_hire_operator_license_status,
    personalIDorPassportUrls: [],
    personalIDorPassportExpiryDate: provider.personal_id_or_passport_expiry_date,
    personalIDorPassportStatus: provider.personal_id_or_passport_status,
    vatRegistrationCertificateUrls: [],
    vatRegistrationCertificateExpiryDate: provider.vat_registration_certificate_expiry_date,
    vatRegistrationCertificateStatus: provider.vat_registration_certificate_status,
  } as IDocumentFields,
  partnerAgreement: {
    agreeToTerms: provider.agree_to_terms,
    signature: provider.signature,
  } as PartnerAgreement,
  paymentDetails: {
    paymentMethod: provider.payment_method,
    paypalEmail: provider.paypal_email,
    bankAccountOwnerName: provider.bank_account_owner_name,
    bankName: provider.bank_name,
    bankCountry: provider.bank_country,
    bankAccountNumber: provider.bank_account_number,
    iban: provider.iban,
    swiftCode: provider.swift_code,
  } as PaymentDetails,
});

export const transformToProviderData = (provider: any): ProviderData => ({
  id: provider.id,
  city: provider.city,
  email: provider.email,
  state: provider.state,
  address: provider.address,
  post_code: provider.postCode,
  status: 'pending',
  phone_number: provider.phoneNumber,
  country: provider.country,
  company_name: provider.companyName,
  company_registration_number: provider.companyRegistrationNumber,
  company_private_hire_operator_license_expiry_date: provider.companyPrivateHireOperatorLicenseExpiryDate,
  company_private_hire_operator_license_status: null,
  personal_id_or_passport_expiry_date: provider.personalIDorPassportExpiryDate,
  personal_id_or_passport_status: null,
  vat_registration_certificate_expiry_date: provider.vatRegistrationCertificateExpiryDate,
  vat_registration_certificate_status: null,
  first_name: provider.firstName,
  last_name: provider.lastName,
  agree_to_terms: provider.agreeToTerms,
  signature: provider.signature,
  payment_method: provider.paymentMethod,
  paypal_email: provider.paypalEmail || null,
  bank_account_owner_name: provider.bankAccountOwnerName || null,
  bank_name: provider.bankName || null,
  bank_country: provider.bankCountry || null,
  bank_account_number: provider.bankAccountNumber || null,
  iban: provider.iban || null, 
  swift_code: provider.swiftCode || null,
  onboarded: false,
});
